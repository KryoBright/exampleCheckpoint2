openapi: 3.0.0
info:
  title: API
  version: 1.0.0
paths:
  /kafka/tast/{topic-id}:
    post:
      operationId: postMessageToTopic
      summary: Put the selected message in the specified topic
      parameters:
        - name: topic-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
      responses:
        '200':
          description: Message successfully posted
  /employees:
    get:
      operationId: getEmployeeIds
      summary: Returns a list of employee IDs
      responses:
        '200':
          description: A list of employee IDs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeIdsResponse'
  /employees/{id}:
    get:
      operationId: getEmployeeInfo
      summary: Gets information about a specific employee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Employee information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeInfoResponse'
  /reports:
    get:
      operationId: getReportList
      summary: Retrieves a list of brief descriptions of generated reports
      responses:
        '200':
          description: A list of report descriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportListResponse'
  /reports/{id}:
    get:
      operationId: getSpecificReport
      summary: Receives a specific report
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: currency
          in: query
          required: false
          schema:
            type: string
            default: RUB
      responses:
        '200':
          description: A specific report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecificReportResponse'
  /reports/{id}/refresh:
    patch:
      operationId: refreshReport
      summary: Recreates the specified report based on current data
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Report successfully refreshed
components:
  schemas:
    MessageRequest:
      type: object
      properties:
        message:
          type: string
    EmployeeIdsResponse:
      type: array
      items:
        type: string
    EmployeeInfoResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        jobTitle:
          type: string
        totalHoursWorked:
          type: number
          format: double
    ReportListResponse:
      type: array
      items:
        type: object
        properties:
          identifier:
            type: string
          startDate:
            type: string
            format: date
          endDate:
            type: string
            format: date
    SpecificReportResponse:
      type: object
      properties:
        reportId:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        employeeHours:
          type: array
          items:
            type: object
            properties:
              employeeId:
                type: string
              hoursWorked:
                type: number
                format: double
              salary:
                type: number
                format: double
